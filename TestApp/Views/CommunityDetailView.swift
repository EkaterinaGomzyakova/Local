import SwiftUI

/// –î–µ—Ç–∞–ª—å–Ω—ã–π —ç–∫—Ä–∞–Ω —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
struct CommunityDetailView: View {
    @Environment(\.presentationMode) private var presentationMode
    let community: CommunityCard  // —Ç–∞–∫–∂–µ CommunityCard

    var body: some View {
        ScrollView {
            VStack(spacing: 16) {
                // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å —Ñ–æ–Ω–æ–º
                ZStack(alignment: .topLeading) {
                    RoundedRectangle(cornerRadius: 30)
                        .fill(Color.purple.opacity(0.3))
                        .frame(height: 200)

                    Button {
                        presentationMode.wrappedValue.dismiss()
                    } label: {
                        Image(systemName: "chevron.left")
                            .padding(8)
                            .background(Color(.systemGray5))
                            .clipShape(Circle())
                    }
                    .padding()
                }

                // –ê–≤–∞—Ç–∞—Ä–∫–∞, —Å—Å—ã–ª–∫–∞, –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
                VStack(spacing: 8) {
                    Image(community.imageName)
                        .resizable()
                        .scaledToFill()
                        .frame(width: 120, height: 120)
                        .clipShape(Circle())
                        .overlay(Circle().stroke(Color.white, lineWidth: 4))
                        .offset(y: -60)
                        .padding(.bottom, -60)

                    Text(community.link)
                        .font(.caption2)
                        .foregroundColor(.white)
                        .padding(6)
                        .background(Color(.systemGray5))
                        .cornerRadius(8)

                    Text(community.name)
                        .font(.title2).fontWeight(.bold)
                        .multilineTextAlignment(.center)
                        .padding(.horizontal)

                    HStack {
                        Spacer()
                        VStack {
                            Text("\(community.participants)")
                                .font(.headline)
                            Text("—É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
                                .font(.caption).foregroundColor(.gray)
                        }
                        Spacer()
                        VStack {
                            Text("\(community.events)")
                                .font(.headline)
                            Text("—Å–æ–±—ã—Ç–∏—è")
                                .font(.caption).foregroundColor(.gray)
                        }
                        Spacer()
                    }
                }

                // –¢–µ–≥–∏
                ScrollView(.horizontal, showsIndicators: false) {
                    HStack(spacing: 12) {
                        ForEach(community.tags, id: \.self) { tag in
                            Text(tag)
                                .font(.caption)
                                .padding(.horizontal, 12)
                                .padding(.vertical, 6)
                                .background(Color(.systemGray5))
                                .clipShape(Capsule())
                        }
                    }
                    .padding(.horizontal)
                }

                // –ö–Ω–æ–ø–∫–∞ ¬´–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è¬ª
                Button("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è") {
                    // TODO: –ª–æ–≥–∏–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
                }
                .font(.headline)
                .foregroundColor(.white)
                .frame(maxWidth: .infinity)
                .padding()
                .background(Color.black)
                .cornerRadius(12)
                .padding(.horizontal)

                // –ü—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ —Å–æ–±—ã—Ç–∏—è
                VStack(alignment: .leading, spacing: 8) {
                    Text("–ü–†–ï–î–°–¢–û–Ø–©–ò–ï")
                        .font(.headline)
                        .padding(.horizontal)
                    ScrollView(.horizontal, showsIndicators: false) {
                        HStack(spacing: 16) {
                            ForEach(community.upcoming, id: \.self) { event in
                                EventCardView(eventcard: event)
                                    .frame(width: 300)
                            }
                        }
                        .padding(.horizontal)
                    }
                }

                // –ü—Ä–æ—à–µ–¥—à–∏–µ —Å–æ–±—ã—Ç–∏—è
                VStack(alignment: .leading, spacing: 8) {
                    Text("–ü–†–û–®–ï–î–®–ò–ï")
                        .font(.headline)
                        .padding(.horizontal)
                    ScrollView(.horizontal, showsIndicators: false) {
                        HStack(spacing: 16) {
                            ForEach(community.past, id: \.self) { event in
                                EventCardView(eventcard: event)
                                    .opacity(0.4)
                                    .frame(width: 300)
                            }
                        }
                        .padding(.horizontal)
                    }
                }

                Spacer(minLength: 40)
            }
        }
        .edgesIgnoringSafeArea(.top)
    }
}

#if DEBUG
struct CommunityDetailView_Previews: PreviewProvider {
    static let sample = CommunityCard(
        imageName: "studsoyuz",
        link: "t.me/studsoyuz",
        name: "–°–¢–£–î–ï–ù–ß–ï–°–ö–ò–ô\n–°–û–Æ–ó –§–ö–ò",
        participants: 19,
        events: 2,
        tags: ["üé≠ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è","üé® –ò—Å–∫—É—Å—Å—Ç–≤–æ"],
        upcoming: [],
        past: []
    )
    static var previews: some View {
        NavigationView {
            CommunityDetailView(community: sample)
        }
    }
}
#endif

